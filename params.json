{"name":"Old Fashioned Fun","body":"### What \r\nOld Fashioned Fun runs in the tray and gives the windows on your desktop gravity.  If you pull a window up it will fall back down.  Windows will also stack on top of other windows. You can throw windows by dragging them quickly and letting go. Windows will bounce off the taskbar, and be repelled by the sides of the screen.\r\n\r\n### Why\r\nA demo of C# interacting with the Windows API. A simple physics demo. And because it's fun.\r\n\r\n### How\r\nPeriodically a a list of windows handles is queried from the system. The top of each window is treated like a shelf where other windows can sit. The dimensions of the desktop are also queried so that forces can be applied to windows that are off the screen. Here is some sample code below:\r\n\r\n```C#\r\n// enumerate open windows by registering a call back to OnEnumWindow\r\npublic Win32.EnumWindowsProc EnumWindow;\r\nEnumWindow = new Win32.EnumWindowsProc(OnEnumWindow);\r\nWin32.EnumWindows(EnumWindow, IntPtr.Zero);\r\n\r\n// get the position of the top of the taskbar\r\nAbd = new Win32.APPBARDATA();\r\nWin32.SHAppBarMessage(Win32.ABM_GETTASKBARPOS, ref Abd);\r\nTaskbarTop = Abd.rc.Top;\r\n\r\n// get the desktop dimensions\r\nDesktop = new Win32.RECT();\r\nWin32.GetWindowRect(Win32.GetDesktopWindow(), ref Desktop);\r\n```","tagline":"Apply gravity to windows in MS Windows","google":"UA-30725447-1","note":"Don't delete this file! It's used internally to help with page regeneration."}